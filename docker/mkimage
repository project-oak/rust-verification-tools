#!/usr/bin/env bash

source $(dirname "$(realpath -s "$0")")/sudo_if_needed.bash

readonly DOCKER_IMAGE_NAME="$1"
readonly DOCKER_FILE="$2"
readonly DOCKER_VERSION="latest"

echo Making docker image ${DOCKER_IMAGE_NAME}:${DOCKER_VERSION} using ${DOCKER_FILE}

# The default user for a Docker container has uid 0 (root). To avoid creating
# root-owned files in the build directory we tell Docker to use the current user
# ID, if known.
# See
# https://github.com/googleapis/google-cloud-cpp/blob/a186208b79d900b4ec71c6f9df3acf7638f01dc6/ci/kokoro/docker/build.sh#L147-L152
readonly DOCKER_UID="${UID:-0}"
readonly DOCKER_GID="$(id -g)"
readonly DOCKER_USER="${USER:-root}"

if [ -v LLVM11 ]; then
  # Version used in Rust for Linux
  RUSTC_VERSION=nightly-2021-02-20
  LLVM_VERSION=11
  KLEE_VERSION="abdb0b650b8fce419dc5695e037557708f374021"
else
  # Last version based on LLVM-10
  RUSTC_VERSION=nightly-2020-08-03
  LLVM_VERSION=10
  KLEE_VERSION="c51ffcd377097ee80ec9b0d6f07f8ea583a5aa1d"
fi

sudo_if_needed docker build \
  --file=${DOCKER_FILE} \
  --platform="linux/amd64" \
  --cache-from="${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}" \
  --tag="${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}" \
  --build-arg=USERNAME="$DOCKER_USER" \
  --build-arg=USER_UID="$DOCKER_UID" \
  --build-arg=USER_GID="$DOCKER_GID" \
  --build-arg=UBUNTU_VERSION="20.04" \
  --build-arg=GTEST_VERSION="1.7.0" \
  --build-arg=LLVM_VERSION="${LLVM_VERSION}" \
  --build-arg=KLEE_VERSION="${KLEE_VERSION}" \
  --build-arg=MINISAT_VERSION="37158a35c62d448b3feccfa83006266e12e5acb7" \
  --build-arg=RUSTC_VERSION="${RUSTC_VERSION}" \
  --build-arg=STP_VERSION="2.3.3" \
  --build-arg=SEAHORN_VERIFY_C_COMMON_VERSION="70129bf47c421d8283785a8fb13cdb216424ef91" \
  --build-arg=SEAHORN_VERSION="ccdc529f81a02e9236ffa00ff57eef4487f0fc9a" \
  --build-arg=UCLIBC_VERSION="klee_uclibc_v1.2" \
  --build-arg=YICES_VERSION="2.6.2" \
  --build-arg=Z3_VERSION="4.8.7" \
  . 1>&2

# sea nov 30 "2e7239d8d2d7be21e64956aa83d936a773e18e32"
# common "8dadb385483984cde4d3a24a61629621e12f6437"
